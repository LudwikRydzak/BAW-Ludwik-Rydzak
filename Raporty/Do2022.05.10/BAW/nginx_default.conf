server {
    
    listen	443 ssl;
    server_name  bawnginx.pl;
    ssl_certificate_key /etc/nginx/ssl/bawnginx.pl.key;
    ssl_certificate     /etc/nginx/ssl/bawnginx.pl.pem;

    ssl_protocols TLSv1.2;    
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    add_header Strict-Transport-Security max-age=31536000;
    root   /usr/share/nginx/bawnginx.pl;

#    map $ssl_client_s_dn $ssl_client_s_dn_cn {
 #       default "should_not_happen";
  #      ~CN=(?<CN>[^/,\"]+) $CN;
   # }

    ssl_verify_client optional;
    ssl_client_certificate /etc/nginx/ssl/userB.crt;
    
    location / {
        index  index.html index.htm;
    }
    location /only-user-a/ {
     
	if ($ssl_client_verify = SUCCESS) {
	     return 401;
	}	
    }
    
    location /only-user-b/ {
#        if ($ssl_client_verify != SUCCESS) {
 #            return 403;
  #      }
        if ($ssl_client_s_dn !~ "userB") {
             return 403;
        }       
    }

    location /user-a-or-b/ {

    #ssl_verify_client optional;
#    ssl_certificate /etc/nginx/ssl/selfsigned-ca.pem;
    #ssl_client_certificate /etc/nginx/ssl/userA.crt;
    #ssl_client_certificate /etc/nginx/ssl/userB.pem;

        if ($ssl_client_verify != SUCCESS) {
             return 402;
        }
        if ($ssl_client_s_dn !~ "userB") {
#	    if ($ssl_client_s_dn !~ "userB"){
 #               return 403;
  #          }       
	}
    }


    location /http-only {
	deny all;
	return 403;
    }
    
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

server {
    listen       80;
    listen  [::]:80;
    server_name  bawnginx.pl;
    root   /usr/share/nginx/bawnginx.pl;

    #access_log  /var/log/nginx/host.access.log  main;

    #ssl_certificate_key /etc/nginx/ssl/bawnginx.pl.key;
    #ssl_certificate     /etc/nginx/ssl/bawnginx.pl.pem;

   # ssl_protocols TLSv1.2 TLSv1.3;
    #ssl_prefer_server_ciphers off;

    #add_header Strict-Transport-Security max-age=31536000;
    location /https-only {
	deny all;
        return 403;
    }
    location /http-only {
	#empty
    }
    location /http-https {
	#empty
    }
    location / {
        return 301 https://bawnginx.pl:5443$request_uri;
    }
    


    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

